#!/usr/bin/env bash 
set -e
set -x

##
## PARAMS
##

RELEASE_VERSION=${RELEASE_VERSION:-1.8.1}
SKAWARE_VERSION=${RELEASE_VERSION%.*}.0

PWD=$(pwd)
OVERLAY_SRC_PATH=${OVERLAY_SRC_PATH:-$PWD/overlay-rootfs}
OVERLAY_DST_PATH=${OVERLAY_DST_PATH:-$PWD/overlay-rootfs}

outputs=( 'linux' 'portable' )
editions=( '' 'debug' )

get_packages_with_versions_from_manifest() {
  # manifest
  manifest=$1

  # skaware versions manifest
  curl -R -L \
      -o /tmp/manifest.txt \
      https://github.com/just-containers/skaware-builder/releases/download/v$SKAWARE_VERSION/$manifest

  # parse manifest into s6 associative array
  versions=()
  while read -r line
  do
      key=`echo "${line}" | cut -d"=" -f1`
      value=`echo "${line}" | cut -d"=" -f2`
      if [[ ! -z "${key}" && ! -z "${value}" ]]; then
          versions+=("${key}-${value}")
      fi
  done < /tmp/manifest.txt

  # delete manifest
  rm /tmp/manifest.txt

  # output manifest as an array
  echo ${versions[@]}
}

##
## DOWNLOAD PACKAGES
##

# destination folder
cd /tmp

packages=($(get_packages_with_versions_from_manifest "manifest.txt"))
for package in "${packages[@]}"; do
  file=$package-linux-amd64-bin.tar.gz
  curl -R -L -O https://github.com/just-containers/skaware-builder/releases/download/v$SKAWARE_VERSION/$file
done

# strace
curl -R -L -o /tmp/strace http://landley.net/aboriginal/downloads/binaries/extras/strace-x86_64

##
## OVERLAYS
##

for output in "${outputs[@]}"; do
  for edition in "${editions[@]}"; do
    # overlay path and dist file
    if [ "${edition}" == "debug" ]; then
      overlaydstpath="$OVERLAY_DST_PATH-$output-dbg"
      overlaytarpath="$HOME/dist/s6-overlay-$output-dbg-amd64.tar.gz"
      
    else
      overlaydstpath="$OVERLAY_DST_PATH-$output"
      overlaytarpath="$HOME/dist/s6-overlay-$output-amd64.tar.gz"
    fi

    # create overlay folder
    mkdir -p $overlaydstpath
    mkdir -p $HOME/dist

    # copy overlay files
    cp -a $OVERLAY_SRC_PATH/. $overlaydstpath/

    # skarnet versions manifest
    packages=($(get_packages_with_versions_from_manifest "manifest-$output.txt"))

    # install required binaries for this concrete output
    for package in "${packages[@]}"; do
      tar xvfz /tmp/$package-linux-amd64-bin.tar.gz -C $overlaydstpath
    done

    # create must exist directories
    mkdir -p $overlaydstpath/etc/s6/init/env-stage2
    mkdir -p $overlaydstpath/etc/{cont-init.d,fix-attrs.d,services.d}
    mkdir -p $overlaydstpath/var/log/s6-uncaught-logs

    # create "supervise" directory in fdholder, its needed for no-catchall
    # stage2 wake up
    mkdir -p $overlaydstpath/etc/s6/services/s6-fdholderd/supervise
    chmod 0700 $overlaydstpath/etc/s6/services/s6-fdholderd/supervise

    # fix fix-attrs perms
    chmod 0755 $overlaydstpath/usr/bin/fix-attrs

    # fix init perms
    chmod 0755 $overlaydstpath/init
    chmod 0755 $overlaydstpath/etc/s6/init/init-*
    chmod 0755 $overlaydstpath/etc/s6/init-catchall/init-*
    chmod 0755 $overlaydstpath/etc/s6/init-no-catchall/init-*
    chmod 0755 $overlaydstpath/etc/s6/services/.s6-svscan/{crash,finish}
    chmod 0755 $overlaydstpath/etc/s6/services/s6-fdholderd/run
    chmod 0755 $overlaydstpath/etc/s6/services/s6-svscan-log/run

    # copy debugging tools & fix perms
    if [ "${edition}" == "debug" ]; then
      cp /tmp/strace $overlaydstpath/usr/bin/strace
      chmod 0755 $overlaydstpath/usr/bin/strace
    fi

    # dist!
    tar --owner=root --group=root \
        -zcvf                     \
        $overlaytarpath           \
        -C $overlaydstpath        \
        ./
  done
done

exit 0
